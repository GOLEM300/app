{"version":3,"sources":["HOC/WithAuthRedirect.js","components/Dialogs/Dialog.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsAuth","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","p","path","id","className","s","dialog","active","name","Message","message","maxLength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","messagesPage","dialogsElements","dialogs","map","key","messagesElements","messages","dialogsItem","values","addMessage","newMessageText","AuthRedirectComponent","DialogsContainer","dispatch","addMessageActionCreator"],"mappings":"8MAIIA,EAAsB,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAQtC,OADmCM,YAAQX,EAARW,CAA6BL,K,oBCfpEM,EAAOC,QAAU,CAAC,QAAU,wBAAwB,YAAc,4BAA4B,OAAS,uBAAuB,SAAW,yBAAyB,QAAU,0B,+FCY7JC,MATf,SAAoBC,GAChB,IAAIC,EAAO,YAAcD,EAAEE,GAC3B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASZ,GAAIO,GAAOD,EAAEO,QCGnBC,MARf,SAAiBR,GACb,OACI,yBAAKG,UAAWC,IAAEC,QACbL,EAAES,U,kCCITC,EAAcC,YAAiB,IA0BrC,IAWMC,EAAsBC,YAAU,CAAEC,KAAM,kBAAlBD,EAXL,SAACpB,GACpB,OACI,0BAAOsB,SAAUtB,EAAMuB,cACnB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAK,iBAAiBe,YAAY,wBAErG,6BAAK,6CAQFC,EAtCf,SAAiB9B,GAEb,IAAIP,EAAQO,EAAM+B,aAEdC,EAAkBvC,EAAMwC,QACvBC,KAAI,SAAAtB,GAAM,OAAI,kBAAC,EAAD,CAAYE,KAAMF,EAAOE,KAAMqB,IAAKvB,EAAOH,GAAIA,GAAIG,EAAOH,QAEzE2B,EAAmB3C,EAAM4C,SACxBH,KAAI,SAAAlB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASmB,IAAKnB,EAAQP,QAMpE,OACI,yBAAKC,UAAWC,IAAEsB,SACd,yBAAKvB,UAAWC,IAAE2B,aACbN,GAEL,yBAAKtB,UAAWC,IAAE0B,UAAWD,GAC7B,kBAACjB,EAAD,CAAqBG,SAVT,SAACiB,GACjBvC,EAAMwC,WAAWD,EAAOE,qB,iBCA5BC,EAAwB9C,YAAiBkC,GAEvCa,EAAmBxC,aAnBH,SAACV,GACnB,MAAO,CACHsC,aAActC,EAAMsC,aACpBU,eAAgBhD,EAAMsC,aAAaU,eACnC/C,OAAQD,EAAME,KAAKD,WAIF,SAACkD,GACtB,MAAO,CACHJ,WAAY,SAACC,GACTG,EAASC,YAAwBJ,QAQpBtC,CAA6CuC,GAEvDC","file":"static/js/5.f673d9d7.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsAuth = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsAuth)(RedirectComponent)\r\n    return ConnectAuthRedirectComponent\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__30d5x\",\"dialogsItem\":\"Dialog_dialogsItem__1l3tY\",\"active\":\"Dialog_active__UP-OJ\",\"messages\":\"Dialog_messages__1FjeZ\",\"message\":\"Dialog_message__3XCT-\"};","import React from 'react'\r\nimport s from './../Dialog.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction DialogItem(p) {\r\n    let path = \"/dialogs/\" + p.id\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n            <NavLink to={path}>{p.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './../Dialog.module.css'\r\n\r\nfunction Message(p) {\r\n    return (\r\n        <div className={s.dialog}>\r\n            {p.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './Dialog.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {Textarea} from '../Common/Preloader/FormControl/FrontControls'\r\nimport { required, maxLengthCreator } from '../../Utils/Validators/validators'\r\n// import { addMessageActionCreator, updateNewMessageText } from '../../Redux/Dialogs-reducer'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nfunction Dialogs(props) {\r\n\r\n    let state = props.messagesPage\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />)\r\n\r\n    let messagesElements = state.messages\r\n        .map(message => <Message message={message.message} key={message.id} />)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>{messagesElements}</div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>)\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        < form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength10]} name=\"newMessageText\" placeholder=\"enter your message\" />\r\n            </div>\r\n            <div><button>Text</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'newMessageText' })(AddMessageForm)\r\n\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport { addMessageActionCreator, updateNewMessageText } from '../../Redux/Dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../HOC/WithAuthRedirect'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n        newMessageText: state.messagesPage.newMessageText,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\nexport default DialogsContainer\r\n\r\n\r\n"],"sourceRoot":""}